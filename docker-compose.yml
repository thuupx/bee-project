version: '3.9'

services:
  # Message Brokers
  kafka:
    container_name: kafka
    image: docker.io/bitnami/kafka:3.5
    ports:
      - '9092:9092'
      - '9094:9094'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      # # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    restart: on-failure
    networks:
      - default

  # Authentication and Authorization services
  keycloak:
    container_name: keycloak
    image: docker.io/bitnami/keycloak:latest
    env_file:
      - .env
    depends_on:
      - postgresql
    ports:
      - '8080:8080'
    restart: on-failure
    networks:
      - default

  postgresql:
    container_name: postgresql
    image: docker.io/bitnami/postgresql:latest
    env_file:
      - .env
    networks:
      - default
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'bee_db_admin']
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - 55432:5432
    restart: on-failure
    volumes:
      - postgresql_data:/bitnami/postgresql

volumes:
  kafka_data:
    driver: local
  postgresql_data:
    driver: local

networks:
  default:
    driver: bridge
